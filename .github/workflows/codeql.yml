name: "CodeQL Advanced"

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]
  schedule:
    - cron: '30 7 * * 6'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: csharp
          build-mode: manual

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Create analyzable project
      run: |
        # Create directory structure for external dependencies
        mkdir -p /tmp/vintage-story/Lib
        mkdir -p /tmp/vintage-story/Mods
        
        # Create minimal DLL stubs to satisfy build requirements
        echo "PK" > /tmp/vintage-story/Lib/OpenTK.Audio.OpenAL.dll
        echo "PK" > /tmp/vintage-story/Lib/OpenTK.Mathematics.dll
        echo "PK" > /tmp/vintage-story/VintagestoryLib.dll
        echo "PK" > /tmp/vintage-story/VintagestoryAPI.dll
        echo "PK" > /tmp/vintage-story/Mods/VSSurvivalMod.dll
        echo "PK" > /tmp/vintage-story/Mods/VSEssentials.dll
        echo "PK" > /tmp/vintage-story/Lib/cairo-sharp.dll
        echo "PK" > /tmp/vintage-story/Lib/Open.Nat.dll
        echo "PK" > /tmp/vintage-story/Lib/Newtonsoft.Json.dll
        echo "PK" > /tmp/vintage-story/Lib/0Harmony.dll
        echo "PK" > /tmp/vintage-story/Lib/protobuf-net.dll
        echo "PK" > /tmp/vintage-story/Lib/Microsoft.Data.Sqlite.dll
        
        # Create a working analyzable project
        cat > RPVoiceChat.Analyzable.csproj << 'EOF'
        <Project Sdk="Microsoft.NET.Sdk">
          <PropertyGroup>
            <TargetFramework>net8.0</TargetFramework>
            <LangVersion>11</LangVersion>
            <RootNamespace>RPVoiceChat</RootNamespace>
            <OutputType>Library</OutputType>
            <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
            <NoWarn>CS1701;CS1702;CS1703</NoWarn>
          </PropertyGroup>
          
          <ItemGroup>
            <Compile Include="src/Config/**/*.cs" />
            <Compile Include="src/Utils/**/*.cs" />
            <Compile Include="src/DB/**/*.cs" />
            <Compile Include="src/Gui/**/*.cs" />
            <Compile Include="src/Networking/**/*.cs" />
            <Compile Include="src/Systems/**/*.cs" />
            <Compile Include="src/Server/**/*.cs" />
            <Compile Include="src/Client/**/*.cs" />
            <Compile Include="src/Block/**/*.cs" />
            <Compile Include="src/BlockBehavior/**/*.cs" />
            <Compile Include="src/BlockEntity/**/*.cs" />
            <Compile Include="src/BlockEntityBehavior/**/*.cs" />
            <Compile Include="src/BlockEntityRenderer/**/*.cs" />
            <Compile Include="src/Items/**/*.cs" />
            <Compile Include="src/Patches/**/*.cs" />
            <Compile Include="src/RPVoiceChatMod.cs" />
            <Compile Include="src/RPVoiceChatClient.cs" />
            <Compile Include="src/RPVoiceChatServer.cs" />
            
            <!-- Exclude Audio directory and AudioUtils.cs with external dependencies -->
            <Compile Remove="src/Audio/**/*.cs" />
            <Compile Remove="src/Utils/AudioUtils.cs" />
          </ItemGroup>
          
          <ItemGroup>
            <PackageReference Include="Concentus" Version="2.2.2" />
            <PackageReference Include="NETStandard.Library" Version="2.0.3" />
            <PackageReference Include="NVorbis" Version="0.10.5" />
          </ItemGroup>
          
          <ItemGroup>
            <Reference Include="VintagestoryLib">
              <HintPath>/tmp/vintage-story/VintagestoryLib.dll</HintPath>
              <Private>false</Private>
            </Reference>
            <Reference Include="VintagestoryAPI">
              <HintPath>/tmp/vintage-story/VintagestoryAPI.dll</HintPath>
              <Private>false</Private>
            </Reference>
            <Reference Include="VSSurvivalMod">
              <HintPath>/tmp/vintage-story/Mods/VSSurvivalMod.dll</HintPath>
              <Private>False</Private>
            </Reference>
            <Reference Include="VSEssentials">
              <HintPath>/tmp/vintage-story/Mods/VSEssentials.dll</HintPath>
              <Private>False</Private>
            </Reference>
            <Reference Include="Newtonsoft.Json">
              <HintPath>/tmp/vintage-story/Lib/Newtonsoft.Json.dll</HintPath>
              <Private>False</Private>
            </Reference>
            <Reference Include="0Harmony">
              <HintPath>/tmp/vintage-story/Lib/0Harmony.dll</HintPath>
              <Private>False</Private>
            </Reference>
            <Reference Include="protobuf-net">
              <HintPath>/tmp/vintage-story/Lib/protobuf-net.dll</HintPath>
              <Private>False</Private>
            </Reference>
            <Reference Include="SQLite">
              <HintPath>/tmp/vintage-story/Lib/Microsoft.Data.Sqlite.dll</HintPath>
              <Private>False</Private>
            </Reference>
          </ItemGroup>
        </Project>
        EOF

    - name: Restore NuGet packages
      run: dotnet restore RPVoiceChat.Analyzable.csproj
      env:
        VINTAGE_STORY: /tmp/vintage-story

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - name: Build analyzable code
      run: |
        echo "Building analyzable code for CodeQL analysis..."
        dotnet build RPVoiceChat.Analyzable.csproj --no-restore --configuration Release --verbosity minimal
        echo "Build completed successfully!"
      env:
        VINTAGE_STORY: /tmp/vintage-story

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4
      with:
        category: "/language:${{matrix.language}}"
